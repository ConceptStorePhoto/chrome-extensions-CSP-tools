console.log("‚úÖ Script inject√© !  content-admin.js");

function catalogActions() {
    try {
        chrome.storage.sync.get("toggle_copy_aicm_buttons", (data) => {
            if (!data.toggle_copy_aicm_buttons) return; // Ne rien faire si d√©sactiv√©
            console.log("üîÑ Ajout des boutons de copie du code AICM");

            const elements = document.querySelectorAll(".column-reference");
            elements.forEach((el) => {
                // √âvite d'ajouter le bouton plusieurs fois
                if (el.querySelector("button.copier-btn")) return;

                // V√©rifie que l'√©l√©ment a du texte
                if (!el.innerText || el.innerText.trim() === "" || el.innerText.includes("Aucun code AICM")) return;

                let texte = el.innerText;

                const bouton = document.createElement("button");
                bouton.innerText = "üìã";
                bouton.className = "copier-btn";
                bouton.style.marginLeft = "8px";
                bouton.style.borderRadius = "10px";
                bouton.style.border = "none";
                bouton.style.outline = "none";
                bouton.style.backgroundColor = "#e7e7e7";
                bouton.style.padding = "4px 8px";
                bouton.onclick = (event) => {
                    event.preventDefault();
                    event.stopPropagation(); // √©vite les comportements attach√©s ailleurs
                    navigator.clipboard.writeText(texte).then(() => {
                        bouton.innerText = "‚úÖ";
                        setTimeout(() => (bouton.innerText = "üìã"), 1500);
                    });
                };

                el.appendChild(bouton);
            });
        });

        chrome.storage.sync.get("toggle_no_aicm_warning", (data) => {
            if (!data.toggle_no_aicm_warning) return; // Ne rien faire si d√©sactiv√©

            const elements = document.querySelectorAll(".column-reference");
            elements.forEach((el) => {
                // V√©rifie que l'√©l√©ment a du texte
                if (!el.innerText || el.innerText.trim() === "" || el.innerText.includes("Aucun code AICM")) {
                    el.querySelector("a").innerText = "Aucun code AICM";
                    el.querySelector("a").setAttribute("style", "color: red !important"); // Met en rouge si pas de code
                }
            });

        });

        chrome.storage.sync.get("toggle_copy_name_buttons", (data) => {
            if (!data.toggle_copy_name_buttons) return; // Ne rien faire si d√©sactiv√©
            console.log("üîÑ Ajout des boutons de copie du nom");

            const elements = document.querySelectorAll(".column-name");
            elements.forEach((el) => {
                // √âvite d'ajouter le bouton plusieurs fois
                if (el.querySelector("button.copier-btn")) return;

                // V√©rifie que l'√©l√©ment a du texte
                if (!el.innerText || el.innerText.trim() === "") return;

                let texte = el.innerText;

                const bouton = document.createElement("button");
                bouton.innerText = "üìã";
                bouton.className = "copier-btn";
                bouton.style.marginRight = "8px";
                bouton.style.borderRadius = "10px";
                bouton.style.border = "none";
                bouton.style.outline = "none";
                bouton.style.backgroundColor = "#e7e7e7";
                bouton.style.padding = "4px 8px";
                bouton.onclick = (event) => {
                    event.preventDefault();
                    event.stopPropagation(); // √©vite les comportements attach√©s ailleurs
                    navigator.clipboard.writeText(texte).then(() => {
                        bouton.innerText = "‚úÖ";
                        setTimeout(() => (bouton.innerText = "üìã"), 1500);
                    });
                };

                el.prepend(bouton);
            });
        });

        // chrome.storage.sync.get("toggle_catalogue_preview_buttons", (data) => {
        //     if (!data.toggle_catalogue_preview_buttons) return; // Ne rien faire si d√©sactiv√©
        //     console.log("üîÑ Ajout des boutons de pr√©visualisation au catalogue");

        //     const elements = document.querySelectorAll(".grid-pr√©visualiser-row-link");
        //     elements.forEach((el) => {
        //         // √âvite d'ajouter le bouton plusieurs fois
        //         if (el.parentNode.parentNode.querySelector("a.preview-btn")) return;

        //         //copier le bouton s√©lectioner dans l'√©l√©ment parent
        //         let element = document.createElement("a");
        //         element.href = el.href;
        //         element.className = "preview-btn";
        //         element.target = "_blank";
        //         element.innerHTML = `<i class="material-icons">visibility</i>`;
        //         el.parentNode.parentNode.appendChild(element);
        //     });
        // });

        chrome.storage.sync.get("toggle_catalog_ungroup_action", (data) => {
            if (!data.toggle_catalog_ungroup_action) return; // Ne rien faire si d√©sactiv√©
            console.log("üîÑ D√©groupage des boutons d'action du catalogue");

            const elements = document.querySelectorAll(".btn-group .dropdown-menu");
            elements.forEach((el) => {
                //pour chaque √©l√©ment du menu d√©roulant, on d√©place les liens dans l'√©l√©ment parent
                el.querySelectorAll("a").forEach((link) => {
                    let icon = link.querySelector('i');
                    link.textContent = "";
                    link.appendChild(icon);
                    link.parentNode.parentNode.appendChild(link);
                });
                el.parentNode.parentNode.querySelector('a.dropdown-toggle').style.display = "none"; // Supprimer le bouton de menu d√©roulant
                el.remove(); // Supprimer le menu d√©roulant
            });
        });


        chrome.storage.sync.get("toggle_catalogue_masquer_horsTaxe", (data) => {
            if (!data.toggle_catalogue_masquer_horsTaxe) return; // Ne rien faire si d√©sactiv√©
            console.log("üîÑ Masquage hors taxe du catalogue");

            document.querySelectorAll("[data-column-id='final_price_tax_excluded']").forEach((el) => {
                el.style.display = "none";
            });

            const elements = document.querySelectorAll(".column-final_price_tax_excluded");
            elements.forEach((el) => {
                el.style.display = "none";
            });
        });


    } catch (error) {
        console.error("Erreur lors de l'ajout des boutons/actions dans le catalogue :", error);
    }
}

function productActions() {
    chrome.storage.sync.get("toggle_preview_buttons", (data) => {
        if (!data.toggle_preview_buttons) return; // Ne rien faire si d√©sactiv√©
        console.log("üîÑ Ajout des boutons de pr√©visualisation");

        const elements = document.querySelectorAll("#product_footer_actions_preview");
        elements.forEach((el) => {
            //copier le bouton s√©lectioner dans l'√©l√©ment parent
            let element = document.createElement("a");
            element.href = el.href;
            element.target = "_blank";
            element.innerHTML = `<i class="material-icons">visibility</i>`;
            el.parentNode.parentNode.appendChild(element);
        });

    });
}




/////// Ex√©cution initiale

// catalogActions();
// productActions();

// d√©clenchement des actions sur les pages correspondantes
console.log("üîÑ V√©rification du type de page :", window.location.pathname.split("/"));
if (window.location.pathname.split("/")[window.location.pathname.split("/").length - 1] == "" && window.location.pathname.includes("catalog")) {
    console.log("‚úÖ Page catalogue d√©tect√©e, ajout des actions...");
    catalogActions();

    // MutationObserver pour suivre les changements du DOM
    // const observer = new MutationObserver(catalogActions);
    // observer.observe(document.body, { childList: true, subtree: true });
}
else if (window.location.pathname.split("/")[window.location.pathname.split("/").length - 1] == "edit" && window.location.pathname.includes("products-v2")) {
    console.log("‚úÖ Page produit d√©tect√©e, ajout des actions...");
    productActions();
}

///////////////

let token = "";
// r√©cup√©ration du tocken dans l'url du site si page admin
// console.log("üîÑ R√©cup√©ration du token depuis l'URL ", window.location);
if (window.location.search.includes('token=')) {
    token = window.location.search.split('=')[window.location.search.split('=').length - 1]; // r√©cup√®re le dernier param√®tre de l'URL
    console.log("üîÑ Token r√©cup√©r√© depuis l'URL :", token);
    chrome.storage.sync.set({ token_admin: token }); // stock la valeur actuelle
}

