console.log("‚úÖ Script inject√© !  content-colissimo.js");

chrome.storage.sync.get("toogle_colissimo_confirm_annuler", (data) => {
    if (!data.toogle_colissimo_confirm_annuler) return; // Ne rien faire si vide ou non d√©fini
    console.log("üîÑ Ajout confirmation annulation collect colissimo");

    const observer = new MutationObserver((mutations, obs) => {
        const boutonAnnuler = document.querySelector('button[data-target="#annulationCollecteModal"]');
        if (boutonAnnuler) {
            obs.disconnect();
            boutonAnnuler.setAttribute('style', 'background-color: #c51212 !important');

            // Intercepter le clic
            boutonAnnuler.addEventListener('click', function (e) {
                e.preventDefault(); // Emp√™che le comportement par d√©faut (le clic)

                const confirmation = confirm("Es-tu s√ªr de vouloir annuler cette collecte ?");

                if (confirmation) {
                    // Si l'utilisateur confirme, simule un clic "r√©el"
                    // Supprime l'√©couteur temporairement pour √©viter une boucle infinie
                    boutonAnnuler.disabled = true; // √©viter double clic
                    boutonAnnuler.click(); // d√©clenche le clic original
                }
                // Sinon, rien ne se passe
            }, true); // capture = true pour intercepter le plus t√¥t possible

        }
    });
    // Observer le body ou un conteneur sp√©cifique
    observer.observe(document.body, {
        childList: true,
        subtree: true
    });

});